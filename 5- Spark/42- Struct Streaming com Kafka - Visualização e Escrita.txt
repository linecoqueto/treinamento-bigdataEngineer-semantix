-----------------------------------------------
Visualizar dados do Kafka em Batch
-----------------------------------------------

--> Para visualizar a Chave e valor e necessário fazer cast

kafka_df.printSchema
root
|-- key: binary (nullable = true)
|-- value: binary (nullable = true)
|-- topic: string (nullable = true)
|-- partition: integer (nullable = true)
|-- offset: long (nullable = true)
|-- timestamp: timestamp (nullable = true)
|-- timestampType: integer (nullable = true)
kafka_df.select(col("key").cast(StringType), col("value").cast(StringType)).show()


-----------------------------------------------
Visualizar dados do Kafka em Stream
-----------------------------------------------

--> Para visualizar a Chave e valor e necessário fazer cast

kafka_df.printSchema
root
|-- key: binary (nullable = true)
|-- value: binary (nullable = true)
|-- topic: string (nullable = true)
|-- partition: integer (nullable = true)
|-- offset: long (nullable = true)
|-- timestamp: timestamp (nullable = true)
|-- timestampType: integer (nullable = true)
kafka_df.select(col("key").cast(StringType), col("value").cast(StringType))
kafka_df.writeStream.format("console").start


-----------------------------------------------
Enviar dados Stream para o Kafka
-----------------------------------------------

--> Fazer uso do Continuous Processing (Experimental)
		- Registrar o progresso da consulta a cada x tempo com o Trigger Continuos
		- O número de tarefas exigidas pela consulta depende de quantas partições a consulta
pode ler das fontes em paralelo (Núcleos >= Partições)

kafka_df.writeStream\
.format("kafka")\
.option("kafka.bootstrap.servers", "host1:port1,host2:port2")\
.option("topic", "topic_teste2")\
.trigger(Trigger.Continuous("1 second"))\
.start()


-----------------------------------------------
Enviar dados Batch para o Kafka
-----------------------------------------------

	- Obrigatório ter o campo value
	- Opcional ter o campo key

dataframe\

.withColumnRenamed(“id”, “key”)\
.withColumnRenamed(“nome”, “value”)

dataframe.write\

.format("kafka")\
.option("kafka.bootstrap.servers", "host1:port1,host2:port2")\
.option("topic", "topic_teste2")\
.save()